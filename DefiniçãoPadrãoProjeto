{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"DefiniçãoPadrãoProjeto","provenance":[],"authorship_tag":"ABX9TyMxRw5prObrS2HahjLs+MMq"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"yOXOPBN66DiO"},"outputs":[],"source":["\"\"\" Escolha e descreva um padrão de projetos: \n","\n","  Os padrões de projeto tem a utilização da programação orientada a objeto, os programadores para solucionar um determinado problema,\n","tem a necessidade de utilizar algumas bibliotecas ou até mesmo códigos, que outros desenvolvedores ja tenha utilizado para \n","resolver um problema semelhante, sendo assim, facilitando a solução de um determinado problema em questão. Os padrões de projetos,\n","proporcionam elementos que conduzem ao reaproveitamento de soluções, e não a penas a reutilização de código.  \n","  Em 1995 Erich Gama, Richard Helm, Ralph Johnson, John Vlissides, conhecidos como os quatro amigos [Gang of Four - GoF], publicaram o\n","livro sobre o título: “Design patterns – elements of reusable object-oriented software, Addison Wesley Longman”, que ganhou uma versão na \n","língua portuguesa sobre o título de “Padrões de Projeto – Soluções reutilizáveis de software orientado a objetos. Bookman”. O livro é um catálogo \n","que descreve 23 padrões de projeto cada um fornecendo uma solução para um problema de software, seu contexto, aplicação e suas eventuais conseqüências, \n","dividindo-os em 3 categorias: padrões de criação, estruturais, e de comportamento.\n","\n"," Singleton\n","\n","  Esse padrão de criação de um projeto, tem a finalidade de, garantir que o objeto seja único, ou seja, que o objeto terá apenas uma única instância,\n","que está disponível de forma única para todo o escopo de uma aplicação.\n","\n","  Singleton –define um método estático que permite aos clientes obterem o objeto único. Ele também será responsável pelo processo de criação do objeto.\n"," \n"," O uso do padrão Singleton está condicionado a:\n","\n","* Quando for necessário manter num sistema, seja ele distribuído ou não, apenas uma instância de objeto e que o ponto de acesso para este seja bem conhecido \n","(Ex. objeto responsável por um pool de impressão numa rede, gerenciador de janelas);\n","* Quando a única instância tiver de ser extensível através de subclasses, possibilitando aos clientes usarem uma instância estendida sem alterar o seu código \n","(visões polimórficas).\n","\"\"\" \n"]}]}